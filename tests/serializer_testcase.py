import unittest
import time
import random
import struct
from bitScan.serializer import Serializer


class SerializeTestCase(unittest.TestCase):
    def setUp(self):
        self.serializer = Serializer()
        self.command = 'version'
        self.timestamp = 1596794043
        self.addr = ('88.99.167.175', 8333)
        self.payload_version = b'\x7f\x11\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\xbb$-_\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xffXc\xa7\xaf \x8d\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\xb4\xe2Z4teO\x87\x0f/Satoshi:0.7.2/0K\x07\x00\x00'

    def test_default_serialize_network_address(self):
        self.assertEqual(self.serializer.serialize_network_address(self.addr), b'\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xffXc\xa7\xaf \x8d')

    def test_default_create_message(self):
        self.assertEqual(self.serializer.create_message(self.command, self.payload_version, True), b'\xf9\xbe\xb4\xd9version\x00\x00\x00\x00\x00e\x00\x00\x00\x13+\x07\xf2\x7f\x11\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\xbb$-_\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xffXc\xa7\xaf \x8d\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\xb4\xe2Z4teO\x87\x0f/Satoshi:0.7.2/0K\x07\x00\x00')

